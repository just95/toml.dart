name: Dart CI

# Trigger the workflow whenever commits are pushed to the `main` branch.
on:
  push:
    branches:
      - 'main'

jobs:

  # Analyzes the Dart code of the package (i.e., all `.dart` files in the `lib`,
  # `bin` and `test` directories) in the with `dart analyze`. The `example`s are
  # not analyzed by this job.
  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    container:
      image: google/dart:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Print Dart SDK Version
        run: dart --version
      - name: Install Dependencies
        run: dart pub get
      - name: Analyze Code
        run: dart analyze

  # Tests whether all Dart source files of the package including the `example`s
  # are formatted correctly with `dart format`.
  format:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    container:
      image: google/dart:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Print Dart SDK Version
        run: dart --version
      - name: Install Dependencies
        run: dart pub get
      - name: Check Code Formatting
        run: dart format --show all --output none --set-exit-if-changed .

  # Runs the unit tests of the package with `dart test`.
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    container:
      image: google/dart:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Print Dart SDK Version
        run: dart --version
      - name: Install Dependencies
        run: dart pub get
      - name: Run Unit Tests
        run: dart test --reporter expanded
